package client

import (
	"bytes"
	"go-malwarebazaar/api"
	"net"
	"net/http"
	"net/url"
	"time"
)

type Bazaar struct {
	Client *GenericClient
}

type GenericClient struct {
	Client *http.Client
	Key    string
}

func NewClient(key string) (*GenericClient, error) {
	c := new(GenericClient)

	c.Client = &http.Client{Transport: &http.Transport{
		DialContext: (&net.Dialer{
			Timeout: 5 * time.Second,
		}).DialContext,
		TLSHandshakeTimeout: 5 * time.Second,
	}}

	c.Key = key

	return c, nil
}

func (c *GenericClient) Request(data url.Values) (resp *http.Response, err error) {
	req, err := http.NewRequest(http.MethodPost, api.BaseUrl, bytes.NewBufferString(data.Encode()))
	if err != nil {
		return resp, err
	}

	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	if len(c.Key) > 0 {
		req.Header.Add("API-KEY", c.Key)
	}

	resp, err = c.Client.Do(req)
	if err != nil {
		return resp, err
	}

	return resp, nil
}
