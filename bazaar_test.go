package go_malwarebazaar

import (
	"go-malwarebazaar/client"
	"net/url"
	"os"
	"testing"
)

const (
	TestKey = ""
)

func TestClient(t *testing.T) {
	c, err := client.NewClient("")
	if err != nil {
		t.Errorf("failed to create client")
	}

	data := url.Values{
		"query": {"get_taginfo"},
		"tag":   {"TrickBot"},
		"limit": {"50"},
	}

	_, err = c.Request(data)
	if err != nil {
		t.Errorf("failed to create request %s\n", err.Error())
	}
}

func TestQuery(t *testing.T) {
	b, err := NewBazaar(TestKey)
	if err != nil {
		t.Errorf("failed to create bazaar")
	}

	_, err = b.QueryTag("TrickBot", 50)
	if err != nil {
		t.Errorf("failed to query tag %s\n", err.Error())
	}
}

func TestDownload(t *testing.T) {
	b, err := NewBazaar(TestKey)
	if err != nil {
		t.Errorf("failed to create bazaar")
	}

	hash := "d709e5ab530d68aee000419be96095fd08e84a0791ad94ccc96c30083a534ce7"
	err = b.DownloadFile(hash, hash)

	if err != nil {
		t.Errorf("failed to download file test %s", err.Error())
	}

	if _, err := os.Stat(hash); err != nil {
		t.Errorf("file has not been written %s", err.Error())
	}
}
